version: "3.9" # optional since v1.27.0.

# Declaraci贸n de las redes que se van a crear. 
networks:
  # Red para los contenedores (back-tier es un label).
  back-tier:
    # Nombre de la red.
    name: org_net
    # Tipo de red.
    driver: bridge
    # Gesti贸n IP.
    ipam:
      driver: default
      # Configuraci贸n de red IPv4 y puerta de enlace.
      config:
        - subnet: 192.168.2.0/24
          gateway: 192.168.2.254


# Declaraci贸n de servicios que se van a crear.
services:
  # Contenedor de persistencia en base de datos posgreSQL (postgres es un label).
  postgres:
    container_name: postgres_ctn
    # restart: "no" | always | on-failure | unless-stopped.
    restart: "no"
    build:
      # Ruta de la carpeta con el dockerfile para construir la imgen.
      context: .
      # Nombre del archivo dockerfile con las opciones de construccion de la imagen.
      dockerfile: ./dockerfiles/postgres.dockerfile
    environment:
      POSTGRES_DB: "setup_db"
      POSTGRES_USER: "gncdev"
      POSTGRES_PASSWORD: "postgres"
    # Persistir la base de datos con un volumen nombradomas alla del ciclo de vidad del comtenedor.
    volumes:
      # Para establecer ver las ventajas de un volumen nombrado lea las observciones en ./volumes/Readme.md
      - db-data:/var/lib/postgresql/data
    networks:
      back-tier:
        aliases:
          - org.organization.db-host
  # Contenedor administrador de base de datos pgAdmin4 (pgadmmin es un label)
  pgadmmin:
    container_name: pgadmin_ctn
    # restart: "no" | always | on-failure | unless-stopped
    restart: "no"
    build:
      # Ruta de la carpeta con el dockerfile para construir la imgen 
      context: .
      # Nombre del archivo dockerfile con las opciones de construccion de la imagen
      dockerfile: ./dockerfiles/pgadmin.dockerfile
    environment:
      PGADMIN_DEFAULT_EMAIL: "giancarlobenavides@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "giancarlo"
    ports:
      - "8000:80"
    depends_on:
      - postgres
    # Persistir la base de datos con un volumen nombradomas alla del ciclo de vidad del comtenedor.
    volumes: 
      # Para establecer ver las ventajas de un volumen nombrado lea las observciones en ./volumes/Readme.md
      - db-admin:/var/lib/pgadmin
    networks:
      back-tier:
        aliases:
          - org.organization.dbadmin-host


# Volumenes creados para el proyecto         
volumes:
  db-data: {}
  db-admin: {}